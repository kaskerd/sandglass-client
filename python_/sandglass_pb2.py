# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sandglass.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from github.com.gogo.protobuf.gogoproto import gogo_pb2 as github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='sandglass.proto',
  package='sandglass',
  syntax='proto3',
  serialized_pb=_b('\n\x0fsandglass.proto\x12\tsandglass\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a-github.com/gogo/protobuf/gogoproto/gogo.proto\"\xee\x01\n\x07Message\x12\x0f\n\x07\x63hannel\x18\x05 \x01(\t\x12\r\n\x05index\x18\n \x01(\x04\x12\x1e\n\x06offset\x18\x0b \x01(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\x12\x38\n\nproducedAt\x18\x0c \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x08\x90\xdf\x1f\x01\xc8\xde\x1f\x00\x12\x36\n\tconsumeIn\x18\r \x01(\x0b\x32\x19.google.protobuf.DurationB\x08\x98\xdf\x1f\x01\xc8\xde\x1f\x00\x12\x0b\n\x03key\x18\x14 \x01(\x0c\x12\x15\n\rclusteringKey\x18\x15 \x01(\x0c\x12\r\n\x05value\x18\x1e \x01(\x0c\"_\n\x15ProduceMessageRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12$\n\x08messages\x18\x03 \x03(\x0b\x32\x12.sandglass.Message\"2\n\x0fProduceResponse\x12\x1f\n\x07offsets\x18\x01 \x03(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\"\xa2\x01\n\x0bTopicConfig\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\"\n\x04kind\x18\x02 \x01(\x0e\x32\x14.sandglass.TopicKind\x12\x19\n\x11replicationFactor\x18\x03 \x01(\x05\x12\x15\n\rnumPartitions\x18\x04 \x01(\x05\x12/\n\rstorageDriver\x18\x05 \x01(\x0e\x32\x18.sandglass.StorageDriver\"\x1e\n\x0eGetTopicParams\x12\x0c\n\x04name\x18\x01 \x01(\t\"1\n\rGetTopicReply\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\npartitions\x18\x02 \x03(\t\"\x1d\n\nTopicReply\x12\x0f\n\x07success\x18\x01 \x01(\x08\"$\n\x11StoreLocallyReply\x12\x0f\n\x07success\x18\x01 \x01(\x08\"c\n\x10\x46\x65tchFromRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x04 \x01(\t\x12\x1c\n\x04\x66rom\x18\x03 \x01(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\"\x80\x01\n\x11\x46\x65tchRangeRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x05 \x01(\t\x12\x1c\n\x04\x66rom\x18\x03 \x01(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\x12\x1a\n\x02to\x18\x04 \x01(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\"c\n\nGetRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x05 \x01(\t\x12\x0b\n\x03key\x18\x03 \x01(\x0c\x12\x15\n\rclusteringKey\x18\x04 \x01(\x0c\"}\n\x17\x43onsumeFromGroupRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x05 \x01(\t\x12\x19\n\x11\x63onsumerGroupName\x18\x03 \x01(\t\x12\x14\n\x0c\x63onsumerName\x18\x04 \x01(\t\"\xb3\x01\n\x0bMarkRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x07 \x01(\t\x12\x15\n\rconsumerGroup\x18\x03 \x01(\t\x12\x14\n\x0c\x63onsumerName\x18\x04 \x01(\t\x12\x1f\n\x07offsets\x18\x05 \x03(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\x12#\n\x05state\x18\x06 \x01(\x0b\x32\x14.sandglass.MarkState\"\x1f\n\x0cMarkResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\"\x90\x01\n\x0eGetMarkRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x06 \x01(\t\x12\x15\n\rconsumerGroup\x18\x03 \x01(\t\x12\x14\n\x0c\x63onsumerName\x18\x04 \x01(\t\x12\x1e\n\x06offset\x18\x05 \x01(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\"1\n\x0fLastOffsetReply\x12\x1e\n\x06offset\x18\x01 \x01(\x0c\x42\x0e\xda\xde\x1f\x06Offset\xc8\xde\x1f\x00\"\x96\x01\n\x11LastOffsetRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0f\n\x07\x63hannel\x18\x06 \x01(\t\x12\x15\n\rconsumerGroup\x18\x03 \x01(\t\x12\x14\n\x0c\x63onsumerName\x18\x04 \x01(\t\x12!\n\x04kind\x18\x05 \x01(\x0e\x32\x13.sandglass.MarkKind\"F\n\x14\x46\x65tchFromSyncRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\x12\x0c\n\x04\x66rom\x18\x03 \x01(\x0c\"\x1d\n\x0bHasResponse\x12\x0e\n\x06\x65xists\x18\x01 \x01(\x08\"E\n\tMarkState\x12!\n\x04kind\x18\x01 \x01(\x0e\x32\x13.sandglass.MarkKind\x12\x15\n\rdeliveryCount\x18\x02 \x01(\x05\"3\n\x0f\x45ndOfLogRequest\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tpartition\x18\x02 \x01(\t\"\x1e\n\rEndOfLogReply\x12\r\n\x05index\x18\x01 \x01(\x04*&\n\tTopicKind\x12\r\n\tTimerKind\x10\x00\x12\n\n\x06KVKind\x10\x01*(\n\rStorageDriver\x12\x0b\n\x07RocksDB\x10\x00\x12\n\n\x06\x42\x61\x64ger\x10\x01*Z\n\x08MarkKind\x12\x0b\n\x07Unknown\x10\x00\x12\x0c\n\x08\x43onsumed\x10\n\x12\x13\n\x0fNotAcknowledged\x10\x14\x12\x10\n\x0c\x41\x63knowledged\x10\x1e\x12\x0c\n\x08\x43ommited\x10(2\x82\x06\n\rBrokerService\x12P\n\x0b\x43reateTopic\x12\x16.sandglass.TopicConfig\x1a\x15.sandglass.TopicReply\"\x12\x82\xd3\xe4\x93\x02\x0c\"\x07/topics:\x01*\x12W\n\x08GetTopic\x12\x19.sandglass.GetTopicParams\x1a\x18.sandglass.GetTopicReply\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/topics/{name}\x12\x82\x01\n\x07Produce\x12 .sandglass.ProduceMessageRequest\x1a\x1a.sandglass.ProduceResponse\"9\x82\xd3\xe4\x93\x02\x33\"\x0f/topics/{topic}:\x01*Z\x1d\"\x1b/topics/{topic}/{partition}\x12@\n\tFetchFrom\x12\x1b.sandglass.FetchFromRequest\x1a\x12.sandglass.Message\"\x00\x30\x01\x12\x42\n\nFetchRange\x12\x1c.sandglass.FetchRangeRequest\x1a\x12.sandglass.Message\"\x00\x30\x01\x12\xb3\x01\n\x10\x43onsumeFromGroup\x12\".sandglass.ConsumeFromGroupRequest\x1a\x12.sandglass.Message\"e\x82\xd3\xe4\x93\x02_\x12\x1b/topics/{topic}/{partition}Z@\x12>/topics/{topic}/{partition}/{consumerGroupName}/{consumerName}0\x01\x12@\n\x0b\x41\x63knowledge\x12\x16.sandglass.MarkRequest\x1a\x17.sandglass.MarkResponse\"\x00\x12\x43\n\x0eNotAcknowledge\x12\x16.sandglass.MarkRequest\x1a\x17.sandglass.MarkResponse\"\x00\x32\xe0\x03\n\x0fInternalService\x12\x37\n\x08GetByKey\x12\x15.sandglass.GetRequest\x1a\x12.sandglass.Message\"\x00\x12\x39\n\x06HasKey\x12\x15.sandglass.GetRequest\x1a\x16.sandglass.HasResponse\"\x00\x12H\n\rFetchFromSync\x12\x1f.sandglass.FetchFromSyncRequest\x1a\x12.sandglass.Message\"\x00\x30\x01\x12H\n\nLastOffset\x12\x1c.sandglass.LastOffsetRequest\x1a\x1a.sandglass.LastOffsetReply\"\x00\x12\x39\n\x04Mark\x12\x16.sandglass.MarkRequest\x1a\x17.sandglass.MarkResponse\"\x00\x12\x46\n\x13GetMarkStateMessage\x12\x19.sandglass.GetMarkRequest\x1a\x12.sandglass.Message\"\x00\x12\x42\n\x08\x45ndOfLog\x12\x1a.sandglass.EndOfLogRequest\x1a\x18.sandglass.EndOfLogReply\"\x00\x42!Z\x07sgproto\xa8\xe2\x1e\x01\xd8\xe1\x1e\x00\x80\xe2\x1e\x01\xc8\xe2\x1e\x01\xe0\xe2\x1e\x01\xd0\xe2\x1e\x01\x62\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2.DESCRIPTOR,])

_TOPICKIND = _descriptor.EnumDescriptor(
  name='TopicKind',
  full_name='sandglass.TopicKind',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TimerKind', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='KVKind', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2164,
  serialized_end=2202,
)
_sym_db.RegisterEnumDescriptor(_TOPICKIND)

TopicKind = enum_type_wrapper.EnumTypeWrapper(_TOPICKIND)
_STORAGEDRIVER = _descriptor.EnumDescriptor(
  name='StorageDriver',
  full_name='sandglass.StorageDriver',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RocksDB', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Badger', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2204,
  serialized_end=2244,
)
_sym_db.RegisterEnumDescriptor(_STORAGEDRIVER)

StorageDriver = enum_type_wrapper.EnumTypeWrapper(_STORAGEDRIVER)
_MARKKIND = _descriptor.EnumDescriptor(
  name='MarkKind',
  full_name='sandglass.MarkKind',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Unknown', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Consumed', index=1, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NotAcknowledged', index=2, number=20,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Acknowledged', index=3, number=30,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Commited', index=4, number=40,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2246,
  serialized_end=2336,
)
_sym_db.RegisterEnumDescriptor(_MARKKIND)

MarkKind = enum_type_wrapper.EnumTypeWrapper(_MARKKIND)
TimerKind = 0
KVKind = 1
RocksDB = 0
Badger = 1
Unknown = 0
Consumed = 10
NotAcknowledged = 20
Acknowledged = 30
Commited = 40



_MESSAGE = _descriptor.Descriptor(
  name='Message',
  full_name='sandglass.Message',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.Message.channel', index=0,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='index', full_name='sandglass.Message.index', index=1,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='sandglass.Message.offset', index=2,
      number=11, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='producedAt', full_name='sandglass.Message.producedAt', index=3,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='consumeIn', full_name='sandglass.Message.consumeIn', index=4,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\337\037\001\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='key', full_name='sandglass.Message.key', index=5,
      number=20, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='clusteringKey', full_name='sandglass.Message.clusteringKey', index=6,
      number=21, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='sandglass.Message.value', index=7,
      number=30, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=173,
  serialized_end=411,
)


_PRODUCEMESSAGEREQUEST = _descriptor.Descriptor(
  name='ProduceMessageRequest',
  full_name='sandglass.ProduceMessageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.ProduceMessageRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.ProduceMessageRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='messages', full_name='sandglass.ProduceMessageRequest.messages', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=413,
  serialized_end=508,
)


_PRODUCERESPONSE = _descriptor.Descriptor(
  name='ProduceResponse',
  full_name='sandglass.ProduceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offsets', full_name='sandglass.ProduceResponse.offsets', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=510,
  serialized_end=560,
)


_TOPICCONFIG = _descriptor.Descriptor(
  name='TopicConfig',
  full_name='sandglass.TopicConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='sandglass.TopicConfig.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kind', full_name='sandglass.TopicConfig.kind', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='replicationFactor', full_name='sandglass.TopicConfig.replicationFactor', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='numPartitions', full_name='sandglass.TopicConfig.numPartitions', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='storageDriver', full_name='sandglass.TopicConfig.storageDriver', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=563,
  serialized_end=725,
)


_GETTOPICPARAMS = _descriptor.Descriptor(
  name='GetTopicParams',
  full_name='sandglass.GetTopicParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='sandglass.GetTopicParams.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=727,
  serialized_end=757,
)


_GETTOPICREPLY = _descriptor.Descriptor(
  name='GetTopicReply',
  full_name='sandglass.GetTopicReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='sandglass.GetTopicReply.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partitions', full_name='sandglass.GetTopicReply.partitions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=759,
  serialized_end=808,
)


_TOPICREPLY = _descriptor.Descriptor(
  name='TopicReply',
  full_name='sandglass.TopicReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='sandglass.TopicReply.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=810,
  serialized_end=839,
)


_STORELOCALLYREPLY = _descriptor.Descriptor(
  name='StoreLocallyReply',
  full_name='sandglass.StoreLocallyReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='sandglass.StoreLocallyReply.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=841,
  serialized_end=877,
)


_FETCHFROMREQUEST = _descriptor.Descriptor(
  name='FetchFromRequest',
  full_name='sandglass.FetchFromRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.FetchFromRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.FetchFromRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.FetchFromRequest.channel', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='from', full_name='sandglass.FetchFromRequest.from', index=3,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=879,
  serialized_end=978,
)


_FETCHRANGEREQUEST = _descriptor.Descriptor(
  name='FetchRangeRequest',
  full_name='sandglass.FetchRangeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.FetchRangeRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.FetchRangeRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.FetchRangeRequest.channel', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='from', full_name='sandglass.FetchRangeRequest.from', index=3,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='to', full_name='sandglass.FetchRangeRequest.to', index=4,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=981,
  serialized_end=1109,
)


_GETREQUEST = _descriptor.Descriptor(
  name='GetRequest',
  full_name='sandglass.GetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.GetRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.GetRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.GetRequest.channel', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='key', full_name='sandglass.GetRequest.key', index=3,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='clusteringKey', full_name='sandglass.GetRequest.clusteringKey', index=4,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1111,
  serialized_end=1210,
)


_CONSUMEFROMGROUPREQUEST = _descriptor.Descriptor(
  name='ConsumeFromGroupRequest',
  full_name='sandglass.ConsumeFromGroupRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.ConsumeFromGroupRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.ConsumeFromGroupRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.ConsumeFromGroupRequest.channel', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerGroupName', full_name='sandglass.ConsumeFromGroupRequest.consumerGroupName', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerName', full_name='sandglass.ConsumeFromGroupRequest.consumerName', index=4,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1212,
  serialized_end=1337,
)


_MARKREQUEST = _descriptor.Descriptor(
  name='MarkRequest',
  full_name='sandglass.MarkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.MarkRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.MarkRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.MarkRequest.channel', index=2,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerGroup', full_name='sandglass.MarkRequest.consumerGroup', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerName', full_name='sandglass.MarkRequest.consumerName', index=4,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offsets', full_name='sandglass.MarkRequest.offsets', index=5,
      number=5, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
    _descriptor.FieldDescriptor(
      name='state', full_name='sandglass.MarkRequest.state', index=6,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1340,
  serialized_end=1519,
)


_MARKRESPONSE = _descriptor.Descriptor(
  name='MarkResponse',
  full_name='sandglass.MarkResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='sandglass.MarkResponse.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1521,
  serialized_end=1552,
)


_GETMARKREQUEST = _descriptor.Descriptor(
  name='GetMarkRequest',
  full_name='sandglass.GetMarkRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.GetMarkRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.GetMarkRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.GetMarkRequest.channel', index=2,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerGroup', full_name='sandglass.GetMarkRequest.consumerGroup', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerName', full_name='sandglass.GetMarkRequest.consumerName', index=4,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='sandglass.GetMarkRequest.offset', index=5,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1555,
  serialized_end=1699,
)


_LASTOFFSETREPLY = _descriptor.Descriptor(
  name='LastOffsetReply',
  full_name='sandglass.LastOffsetReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offset', full_name='sandglass.LastOffsetReply.offset', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1701,
  serialized_end=1750,
)


_LASTOFFSETREQUEST = _descriptor.Descriptor(
  name='LastOffsetRequest',
  full_name='sandglass.LastOffsetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.LastOffsetRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.LastOffsetRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel', full_name='sandglass.LastOffsetRequest.channel', index=2,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerGroup', full_name='sandglass.LastOffsetRequest.consumerGroup', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consumerName', full_name='sandglass.LastOffsetRequest.consumerName', index=4,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kind', full_name='sandglass.LastOffsetRequest.kind', index=5,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1753,
  serialized_end=1903,
)


_FETCHFROMSYNCREQUEST = _descriptor.Descriptor(
  name='FetchFromSyncRequest',
  full_name='sandglass.FetchFromSyncRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.FetchFromSyncRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.FetchFromSyncRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='from', full_name='sandglass.FetchFromSyncRequest.from', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1905,
  serialized_end=1975,
)


_HASRESPONSE = _descriptor.Descriptor(
  name='HasResponse',
  full_name='sandglass.HasResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exists', full_name='sandglass.HasResponse.exists', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1977,
  serialized_end=2006,
)


_MARKSTATE = _descriptor.Descriptor(
  name='MarkState',
  full_name='sandglass.MarkState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='kind', full_name='sandglass.MarkState.kind', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='deliveryCount', full_name='sandglass.MarkState.deliveryCount', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2008,
  serialized_end=2077,
)


_ENDOFLOGREQUEST = _descriptor.Descriptor(
  name='EndOfLogRequest',
  full_name='sandglass.EndOfLogRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='topic', full_name='sandglass.EndOfLogRequest.topic', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='sandglass.EndOfLogRequest.partition', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2079,
  serialized_end=2130,
)


_ENDOFLOGREPLY = _descriptor.Descriptor(
  name='EndOfLogReply',
  full_name='sandglass.EndOfLogReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='sandglass.EndOfLogReply.index', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2132,
  serialized_end=2162,
)

_MESSAGE.fields_by_name['producedAt'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_MESSAGE.fields_by_name['consumeIn'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_PRODUCEMESSAGEREQUEST.fields_by_name['messages'].message_type = _MESSAGE
_TOPICCONFIG.fields_by_name['kind'].enum_type = _TOPICKIND
_TOPICCONFIG.fields_by_name['storageDriver'].enum_type = _STORAGEDRIVER
_MARKREQUEST.fields_by_name['state'].message_type = _MARKSTATE
_LASTOFFSETREQUEST.fields_by_name['kind'].enum_type = _MARKKIND
_MARKSTATE.fields_by_name['kind'].enum_type = _MARKKIND
DESCRIPTOR.message_types_by_name['Message'] = _MESSAGE
DESCRIPTOR.message_types_by_name['ProduceMessageRequest'] = _PRODUCEMESSAGEREQUEST
DESCRIPTOR.message_types_by_name['ProduceResponse'] = _PRODUCERESPONSE
DESCRIPTOR.message_types_by_name['TopicConfig'] = _TOPICCONFIG
DESCRIPTOR.message_types_by_name['GetTopicParams'] = _GETTOPICPARAMS
DESCRIPTOR.message_types_by_name['GetTopicReply'] = _GETTOPICREPLY
DESCRIPTOR.message_types_by_name['TopicReply'] = _TOPICREPLY
DESCRIPTOR.message_types_by_name['StoreLocallyReply'] = _STORELOCALLYREPLY
DESCRIPTOR.message_types_by_name['FetchFromRequest'] = _FETCHFROMREQUEST
DESCRIPTOR.message_types_by_name['FetchRangeRequest'] = _FETCHRANGEREQUEST
DESCRIPTOR.message_types_by_name['GetRequest'] = _GETREQUEST
DESCRIPTOR.message_types_by_name['ConsumeFromGroupRequest'] = _CONSUMEFROMGROUPREQUEST
DESCRIPTOR.message_types_by_name['MarkRequest'] = _MARKREQUEST
DESCRIPTOR.message_types_by_name['MarkResponse'] = _MARKRESPONSE
DESCRIPTOR.message_types_by_name['GetMarkRequest'] = _GETMARKREQUEST
DESCRIPTOR.message_types_by_name['LastOffsetReply'] = _LASTOFFSETREPLY
DESCRIPTOR.message_types_by_name['LastOffsetRequest'] = _LASTOFFSETREQUEST
DESCRIPTOR.message_types_by_name['FetchFromSyncRequest'] = _FETCHFROMSYNCREQUEST
DESCRIPTOR.message_types_by_name['HasResponse'] = _HASRESPONSE
DESCRIPTOR.message_types_by_name['MarkState'] = _MARKSTATE
DESCRIPTOR.message_types_by_name['EndOfLogRequest'] = _ENDOFLOGREQUEST
DESCRIPTOR.message_types_by_name['EndOfLogReply'] = _ENDOFLOGREPLY
DESCRIPTOR.enum_types_by_name['TopicKind'] = _TOPICKIND
DESCRIPTOR.enum_types_by_name['StorageDriver'] = _STORAGEDRIVER
DESCRIPTOR.enum_types_by_name['MarkKind'] = _MARKKIND
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), dict(
  DESCRIPTOR = _MESSAGE,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.Message)
  ))
_sym_db.RegisterMessage(Message)

ProduceMessageRequest = _reflection.GeneratedProtocolMessageType('ProduceMessageRequest', (_message.Message,), dict(
  DESCRIPTOR = _PRODUCEMESSAGEREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.ProduceMessageRequest)
  ))
_sym_db.RegisterMessage(ProduceMessageRequest)

ProduceResponse = _reflection.GeneratedProtocolMessageType('ProduceResponse', (_message.Message,), dict(
  DESCRIPTOR = _PRODUCERESPONSE,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.ProduceResponse)
  ))
_sym_db.RegisterMessage(ProduceResponse)

TopicConfig = _reflection.GeneratedProtocolMessageType('TopicConfig', (_message.Message,), dict(
  DESCRIPTOR = _TOPICCONFIG,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.TopicConfig)
  ))
_sym_db.RegisterMessage(TopicConfig)

GetTopicParams = _reflection.GeneratedProtocolMessageType('GetTopicParams', (_message.Message,), dict(
  DESCRIPTOR = _GETTOPICPARAMS,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.GetTopicParams)
  ))
_sym_db.RegisterMessage(GetTopicParams)

GetTopicReply = _reflection.GeneratedProtocolMessageType('GetTopicReply', (_message.Message,), dict(
  DESCRIPTOR = _GETTOPICREPLY,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.GetTopicReply)
  ))
_sym_db.RegisterMessage(GetTopicReply)

TopicReply = _reflection.GeneratedProtocolMessageType('TopicReply', (_message.Message,), dict(
  DESCRIPTOR = _TOPICREPLY,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.TopicReply)
  ))
_sym_db.RegisterMessage(TopicReply)

StoreLocallyReply = _reflection.GeneratedProtocolMessageType('StoreLocallyReply', (_message.Message,), dict(
  DESCRIPTOR = _STORELOCALLYREPLY,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.StoreLocallyReply)
  ))
_sym_db.RegisterMessage(StoreLocallyReply)

FetchFromRequest = _reflection.GeneratedProtocolMessageType('FetchFromRequest', (_message.Message,), dict(
  DESCRIPTOR = _FETCHFROMREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.FetchFromRequest)
  ))
_sym_db.RegisterMessage(FetchFromRequest)

FetchRangeRequest = _reflection.GeneratedProtocolMessageType('FetchRangeRequest', (_message.Message,), dict(
  DESCRIPTOR = _FETCHRANGEREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.FetchRangeRequest)
  ))
_sym_db.RegisterMessage(FetchRangeRequest)

GetRequest = _reflection.GeneratedProtocolMessageType('GetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.GetRequest)
  ))
_sym_db.RegisterMessage(GetRequest)

ConsumeFromGroupRequest = _reflection.GeneratedProtocolMessageType('ConsumeFromGroupRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONSUMEFROMGROUPREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.ConsumeFromGroupRequest)
  ))
_sym_db.RegisterMessage(ConsumeFromGroupRequest)

MarkRequest = _reflection.GeneratedProtocolMessageType('MarkRequest', (_message.Message,), dict(
  DESCRIPTOR = _MARKREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.MarkRequest)
  ))
_sym_db.RegisterMessage(MarkRequest)

MarkResponse = _reflection.GeneratedProtocolMessageType('MarkResponse', (_message.Message,), dict(
  DESCRIPTOR = _MARKRESPONSE,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.MarkResponse)
  ))
_sym_db.RegisterMessage(MarkResponse)

GetMarkRequest = _reflection.GeneratedProtocolMessageType('GetMarkRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETMARKREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.GetMarkRequest)
  ))
_sym_db.RegisterMessage(GetMarkRequest)

LastOffsetReply = _reflection.GeneratedProtocolMessageType('LastOffsetReply', (_message.Message,), dict(
  DESCRIPTOR = _LASTOFFSETREPLY,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.LastOffsetReply)
  ))
_sym_db.RegisterMessage(LastOffsetReply)

LastOffsetRequest = _reflection.GeneratedProtocolMessageType('LastOffsetRequest', (_message.Message,), dict(
  DESCRIPTOR = _LASTOFFSETREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.LastOffsetRequest)
  ))
_sym_db.RegisterMessage(LastOffsetRequest)

FetchFromSyncRequest = _reflection.GeneratedProtocolMessageType('FetchFromSyncRequest', (_message.Message,), dict(
  DESCRIPTOR = _FETCHFROMSYNCREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.FetchFromSyncRequest)
  ))
_sym_db.RegisterMessage(FetchFromSyncRequest)

HasResponse = _reflection.GeneratedProtocolMessageType('HasResponse', (_message.Message,), dict(
  DESCRIPTOR = _HASRESPONSE,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.HasResponse)
  ))
_sym_db.RegisterMessage(HasResponse)

MarkState = _reflection.GeneratedProtocolMessageType('MarkState', (_message.Message,), dict(
  DESCRIPTOR = _MARKSTATE,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.MarkState)
  ))
_sym_db.RegisterMessage(MarkState)

EndOfLogRequest = _reflection.GeneratedProtocolMessageType('EndOfLogRequest', (_message.Message,), dict(
  DESCRIPTOR = _ENDOFLOGREQUEST,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.EndOfLogRequest)
  ))
_sym_db.RegisterMessage(EndOfLogRequest)

EndOfLogReply = _reflection.GeneratedProtocolMessageType('EndOfLogReply', (_message.Message,), dict(
  DESCRIPTOR = _ENDOFLOGREPLY,
  __module__ = 'sandglass_pb2'
  # @@protoc_insertion_point(class_scope:sandglass.EndOfLogReply)
  ))
_sym_db.RegisterMessage(EndOfLogReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z\007sgproto\250\342\036\001\330\341\036\000\200\342\036\001\310\342\036\001\340\342\036\001\320\342\036\001'))
_MESSAGE.fields_by_name['offset'].has_options = True
_MESSAGE.fields_by_name['offset']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))
_MESSAGE.fields_by_name['producedAt'].has_options = True
_MESSAGE.fields_by_name['producedAt']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001\310\336\037\000'))
_MESSAGE.fields_by_name['consumeIn'].has_options = True
_MESSAGE.fields_by_name['consumeIn']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\230\337\037\001\310\336\037\000'))
_PRODUCERESPONSE.fields_by_name['offsets'].has_options = True
_PRODUCERESPONSE.fields_by_name['offsets']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))
_FETCHFROMREQUEST.fields_by_name['from'].has_options = True
_FETCHFROMREQUEST.fields_by_name['from']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))
_FETCHRANGEREQUEST.fields_by_name['from'].has_options = True
_FETCHRANGEREQUEST.fields_by_name['from']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))
_FETCHRANGEREQUEST.fields_by_name['to'].has_options = True
_FETCHRANGEREQUEST.fields_by_name['to']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))
_MARKREQUEST.fields_by_name['offsets'].has_options = True
_MARKREQUEST.fields_by_name['offsets']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))
_GETMARKREQUEST.fields_by_name['offset'].has_options = True
_GETMARKREQUEST.fields_by_name['offset']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))
_LASTOFFSETREPLY.fields_by_name['offset'].has_options = True
_LASTOFFSETREPLY.fields_by_name['offset']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\332\336\037\006Offset\310\336\037\000'))

_BROKERSERVICE = _descriptor.ServiceDescriptor(
  name='BrokerService',
  full_name='sandglass.BrokerService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=2339,
  serialized_end=3109,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateTopic',
    full_name='sandglass.BrokerService.CreateTopic',
    index=0,
    containing_service=None,
    input_type=_TOPICCONFIG,
    output_type=_TOPICREPLY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\014\"\007/topics:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='GetTopic',
    full_name='sandglass.BrokerService.GetTopic',
    index=1,
    containing_service=None,
    input_type=_GETTOPICPARAMS,
    output_type=_GETTOPICREPLY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002\020\022\016/topics/{name}')),
  ),
  _descriptor.MethodDescriptor(
    name='Produce',
    full_name='sandglass.BrokerService.Produce',
    index=2,
    containing_service=None,
    input_type=_PRODUCEMESSAGEREQUEST,
    output_type=_PRODUCERESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\0023\"\017/topics/{topic}:\001*Z\035\"\033/topics/{topic}/{partition}')),
  ),
  _descriptor.MethodDescriptor(
    name='FetchFrom',
    full_name='sandglass.BrokerService.FetchFrom',
    index=3,
    containing_service=None,
    input_type=_FETCHFROMREQUEST,
    output_type=_MESSAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='FetchRange',
    full_name='sandglass.BrokerService.FetchRange',
    index=4,
    containing_service=None,
    input_type=_FETCHRANGEREQUEST,
    output_type=_MESSAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ConsumeFromGroup',
    full_name='sandglass.BrokerService.ConsumeFromGroup',
    index=5,
    containing_service=None,
    input_type=_CONSUMEFROMGROUPREQUEST,
    output_type=_MESSAGE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002_\022\033/topics/{topic}/{partition}Z@\022>/topics/{topic}/{partition}/{consumerGroupName}/{consumerName}')),
  ),
  _descriptor.MethodDescriptor(
    name='Acknowledge',
    full_name='sandglass.BrokerService.Acknowledge',
    index=6,
    containing_service=None,
    input_type=_MARKREQUEST,
    output_type=_MARKRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='NotAcknowledge',
    full_name='sandglass.BrokerService.NotAcknowledge',
    index=7,
    containing_service=None,
    input_type=_MARKREQUEST,
    output_type=_MARKRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_BROKERSERVICE)

DESCRIPTOR.services_by_name['BrokerService'] = _BROKERSERVICE


_INTERNALSERVICE = _descriptor.ServiceDescriptor(
  name='InternalService',
  full_name='sandglass.InternalService',
  file=DESCRIPTOR,
  index=1,
  options=None,
  serialized_start=3112,
  serialized_end=3592,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetByKey',
    full_name='sandglass.InternalService.GetByKey',
    index=0,
    containing_service=None,
    input_type=_GETREQUEST,
    output_type=_MESSAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='HasKey',
    full_name='sandglass.InternalService.HasKey',
    index=1,
    containing_service=None,
    input_type=_GETREQUEST,
    output_type=_HASRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='FetchFromSync',
    full_name='sandglass.InternalService.FetchFromSync',
    index=2,
    containing_service=None,
    input_type=_FETCHFROMSYNCREQUEST,
    output_type=_MESSAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='LastOffset',
    full_name='sandglass.InternalService.LastOffset',
    index=3,
    containing_service=None,
    input_type=_LASTOFFSETREQUEST,
    output_type=_LASTOFFSETREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Mark',
    full_name='sandglass.InternalService.Mark',
    index=4,
    containing_service=None,
    input_type=_MARKREQUEST,
    output_type=_MARKRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetMarkStateMessage',
    full_name='sandglass.InternalService.GetMarkStateMessage',
    index=5,
    containing_service=None,
    input_type=_GETMARKREQUEST,
    output_type=_MESSAGE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='EndOfLog',
    full_name='sandglass.InternalService.EndOfLog',
    index=6,
    containing_service=None,
    input_type=_ENDOFLOGREQUEST,
    output_type=_ENDOFLOGREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INTERNALSERVICE)

DESCRIPTOR.services_by_name['InternalService'] = _INTERNALSERVICE

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class BrokerServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CreateTopic = channel.unary_unary(
          '/sandglass.BrokerService/CreateTopic',
          request_serializer=TopicConfig.SerializeToString,
          response_deserializer=TopicReply.FromString,
          )
      self.GetTopic = channel.unary_unary(
          '/sandglass.BrokerService/GetTopic',
          request_serializer=GetTopicParams.SerializeToString,
          response_deserializer=GetTopicReply.FromString,
          )
      self.Produce = channel.unary_unary(
          '/sandglass.BrokerService/Produce',
          request_serializer=ProduceMessageRequest.SerializeToString,
          response_deserializer=ProduceResponse.FromString,
          )
      self.FetchFrom = channel.unary_stream(
          '/sandglass.BrokerService/FetchFrom',
          request_serializer=FetchFromRequest.SerializeToString,
          response_deserializer=Message.FromString,
          )
      self.FetchRange = channel.unary_stream(
          '/sandglass.BrokerService/FetchRange',
          request_serializer=FetchRangeRequest.SerializeToString,
          response_deserializer=Message.FromString,
          )
      self.ConsumeFromGroup = channel.unary_stream(
          '/sandglass.BrokerService/ConsumeFromGroup',
          request_serializer=ConsumeFromGroupRequest.SerializeToString,
          response_deserializer=Message.FromString,
          )
      self.Acknowledge = channel.unary_unary(
          '/sandglass.BrokerService/Acknowledge',
          request_serializer=MarkRequest.SerializeToString,
          response_deserializer=MarkResponse.FromString,
          )
      self.NotAcknowledge = channel.unary_unary(
          '/sandglass.BrokerService/NotAcknowledge',
          request_serializer=MarkRequest.SerializeToString,
          response_deserializer=MarkResponse.FromString,
          )


  class BrokerServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def CreateTopic(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTopic(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Produce(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FetchFrom(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FetchRange(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ConsumeFromGroup(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Acknowledge(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def NotAcknowledge(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_BrokerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateTopic': grpc.unary_unary_rpc_method_handler(
            servicer.CreateTopic,
            request_deserializer=TopicConfig.FromString,
            response_serializer=TopicReply.SerializeToString,
        ),
        'GetTopic': grpc.unary_unary_rpc_method_handler(
            servicer.GetTopic,
            request_deserializer=GetTopicParams.FromString,
            response_serializer=GetTopicReply.SerializeToString,
        ),
        'Produce': grpc.unary_unary_rpc_method_handler(
            servicer.Produce,
            request_deserializer=ProduceMessageRequest.FromString,
            response_serializer=ProduceResponse.SerializeToString,
        ),
        'FetchFrom': grpc.unary_stream_rpc_method_handler(
            servicer.FetchFrom,
            request_deserializer=FetchFromRequest.FromString,
            response_serializer=Message.SerializeToString,
        ),
        'FetchRange': grpc.unary_stream_rpc_method_handler(
            servicer.FetchRange,
            request_deserializer=FetchRangeRequest.FromString,
            response_serializer=Message.SerializeToString,
        ),
        'ConsumeFromGroup': grpc.unary_stream_rpc_method_handler(
            servicer.ConsumeFromGroup,
            request_deserializer=ConsumeFromGroupRequest.FromString,
            response_serializer=Message.SerializeToString,
        ),
        'Acknowledge': grpc.unary_unary_rpc_method_handler(
            servicer.Acknowledge,
            request_deserializer=MarkRequest.FromString,
            response_serializer=MarkResponse.SerializeToString,
        ),
        'NotAcknowledge': grpc.unary_unary_rpc_method_handler(
            servicer.NotAcknowledge,
            request_deserializer=MarkRequest.FromString,
            response_serializer=MarkResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'sandglass.BrokerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class InternalServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetByKey = channel.unary_unary(
          '/sandglass.InternalService/GetByKey',
          request_serializer=GetRequest.SerializeToString,
          response_deserializer=Message.FromString,
          )
      self.HasKey = channel.unary_unary(
          '/sandglass.InternalService/HasKey',
          request_serializer=GetRequest.SerializeToString,
          response_deserializer=HasResponse.FromString,
          )
      self.FetchFromSync = channel.unary_stream(
          '/sandglass.InternalService/FetchFromSync',
          request_serializer=FetchFromSyncRequest.SerializeToString,
          response_deserializer=Message.FromString,
          )
      self.LastOffset = channel.unary_unary(
          '/sandglass.InternalService/LastOffset',
          request_serializer=LastOffsetRequest.SerializeToString,
          response_deserializer=LastOffsetReply.FromString,
          )
      self.Mark = channel.unary_unary(
          '/sandglass.InternalService/Mark',
          request_serializer=MarkRequest.SerializeToString,
          response_deserializer=MarkResponse.FromString,
          )
      self.GetMarkStateMessage = channel.unary_unary(
          '/sandglass.InternalService/GetMarkStateMessage',
          request_serializer=GetMarkRequest.SerializeToString,
          response_deserializer=Message.FromString,
          )
      self.EndOfLog = channel.unary_unary(
          '/sandglass.InternalService/EndOfLog',
          request_serializer=EndOfLogRequest.SerializeToString,
          response_deserializer=EndOfLogReply.FromString,
          )


  class InternalServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetByKey(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HasKey(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FetchFromSync(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LastOffset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Mark(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetMarkStateMessage(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def EndOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_InternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetByKey': grpc.unary_unary_rpc_method_handler(
            servicer.GetByKey,
            request_deserializer=GetRequest.FromString,
            response_serializer=Message.SerializeToString,
        ),
        'HasKey': grpc.unary_unary_rpc_method_handler(
            servicer.HasKey,
            request_deserializer=GetRequest.FromString,
            response_serializer=HasResponse.SerializeToString,
        ),
        'FetchFromSync': grpc.unary_stream_rpc_method_handler(
            servicer.FetchFromSync,
            request_deserializer=FetchFromSyncRequest.FromString,
            response_serializer=Message.SerializeToString,
        ),
        'LastOffset': grpc.unary_unary_rpc_method_handler(
            servicer.LastOffset,
            request_deserializer=LastOffsetRequest.FromString,
            response_serializer=LastOffsetReply.SerializeToString,
        ),
        'Mark': grpc.unary_unary_rpc_method_handler(
            servicer.Mark,
            request_deserializer=MarkRequest.FromString,
            response_serializer=MarkResponse.SerializeToString,
        ),
        'GetMarkStateMessage': grpc.unary_unary_rpc_method_handler(
            servicer.GetMarkStateMessage,
            request_deserializer=GetMarkRequest.FromString,
            response_serializer=Message.SerializeToString,
        ),
        'EndOfLog': grpc.unary_unary_rpc_method_handler(
            servicer.EndOfLog,
            request_deserializer=EndOfLogRequest.FromString,
            response_serializer=EndOfLogReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'sandglass.InternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaBrokerServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateTopic(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTopic(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Produce(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FetchFrom(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FetchRange(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ConsumeFromGroup(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Acknowledge(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def NotAcknowledge(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaBrokerServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def CreateTopic(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateTopic.future = None
    def GetTopic(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTopic.future = None
    def Produce(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Produce.future = None
    def FetchFrom(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def FetchRange(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def ConsumeFromGroup(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def Acknowledge(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Acknowledge.future = None
    def NotAcknowledge(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    NotAcknowledge.future = None


  def beta_create_BrokerService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('sandglass.BrokerService', 'Acknowledge'): MarkRequest.FromString,
      ('sandglass.BrokerService', 'ConsumeFromGroup'): ConsumeFromGroupRequest.FromString,
      ('sandglass.BrokerService', 'CreateTopic'): TopicConfig.FromString,
      ('sandglass.BrokerService', 'FetchFrom'): FetchFromRequest.FromString,
      ('sandglass.BrokerService', 'FetchRange'): FetchRangeRequest.FromString,
      ('sandglass.BrokerService', 'GetTopic'): GetTopicParams.FromString,
      ('sandglass.BrokerService', 'NotAcknowledge'): MarkRequest.FromString,
      ('sandglass.BrokerService', 'Produce'): ProduceMessageRequest.FromString,
    }
    response_serializers = {
      ('sandglass.BrokerService', 'Acknowledge'): MarkResponse.SerializeToString,
      ('sandglass.BrokerService', 'ConsumeFromGroup'): Message.SerializeToString,
      ('sandglass.BrokerService', 'CreateTopic'): TopicReply.SerializeToString,
      ('sandglass.BrokerService', 'FetchFrom'): Message.SerializeToString,
      ('sandglass.BrokerService', 'FetchRange'): Message.SerializeToString,
      ('sandglass.BrokerService', 'GetTopic'): GetTopicReply.SerializeToString,
      ('sandglass.BrokerService', 'NotAcknowledge'): MarkResponse.SerializeToString,
      ('sandglass.BrokerService', 'Produce'): ProduceResponse.SerializeToString,
    }
    method_implementations = {
      ('sandglass.BrokerService', 'Acknowledge'): face_utilities.unary_unary_inline(servicer.Acknowledge),
      ('sandglass.BrokerService', 'ConsumeFromGroup'): face_utilities.unary_stream_inline(servicer.ConsumeFromGroup),
      ('sandglass.BrokerService', 'CreateTopic'): face_utilities.unary_unary_inline(servicer.CreateTopic),
      ('sandglass.BrokerService', 'FetchFrom'): face_utilities.unary_stream_inline(servicer.FetchFrom),
      ('sandglass.BrokerService', 'FetchRange'): face_utilities.unary_stream_inline(servicer.FetchRange),
      ('sandglass.BrokerService', 'GetTopic'): face_utilities.unary_unary_inline(servicer.GetTopic),
      ('sandglass.BrokerService', 'NotAcknowledge'): face_utilities.unary_unary_inline(servicer.NotAcknowledge),
      ('sandglass.BrokerService', 'Produce'): face_utilities.unary_unary_inline(servicer.Produce),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_BrokerService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('sandglass.BrokerService', 'Acknowledge'): MarkRequest.SerializeToString,
      ('sandglass.BrokerService', 'ConsumeFromGroup'): ConsumeFromGroupRequest.SerializeToString,
      ('sandglass.BrokerService', 'CreateTopic'): TopicConfig.SerializeToString,
      ('sandglass.BrokerService', 'FetchFrom'): FetchFromRequest.SerializeToString,
      ('sandglass.BrokerService', 'FetchRange'): FetchRangeRequest.SerializeToString,
      ('sandglass.BrokerService', 'GetTopic'): GetTopicParams.SerializeToString,
      ('sandglass.BrokerService', 'NotAcknowledge'): MarkRequest.SerializeToString,
      ('sandglass.BrokerService', 'Produce'): ProduceMessageRequest.SerializeToString,
    }
    response_deserializers = {
      ('sandglass.BrokerService', 'Acknowledge'): MarkResponse.FromString,
      ('sandglass.BrokerService', 'ConsumeFromGroup'): Message.FromString,
      ('sandglass.BrokerService', 'CreateTopic'): TopicReply.FromString,
      ('sandglass.BrokerService', 'FetchFrom'): Message.FromString,
      ('sandglass.BrokerService', 'FetchRange'): Message.FromString,
      ('sandglass.BrokerService', 'GetTopic'): GetTopicReply.FromString,
      ('sandglass.BrokerService', 'NotAcknowledge'): MarkResponse.FromString,
      ('sandglass.BrokerService', 'Produce'): ProduceResponse.FromString,
    }
    cardinalities = {
      'Acknowledge': cardinality.Cardinality.UNARY_UNARY,
      'ConsumeFromGroup': cardinality.Cardinality.UNARY_STREAM,
      'CreateTopic': cardinality.Cardinality.UNARY_UNARY,
      'FetchFrom': cardinality.Cardinality.UNARY_STREAM,
      'FetchRange': cardinality.Cardinality.UNARY_STREAM,
      'GetTopic': cardinality.Cardinality.UNARY_UNARY,
      'NotAcknowledge': cardinality.Cardinality.UNARY_UNARY,
      'Produce': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'sandglass.BrokerService', cardinalities, options=stub_options)


  class BetaInternalServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetByKey(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HasKey(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FetchFromSync(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LastOffset(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Mark(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetMarkStateMessage(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def EndOfLog(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaInternalServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetByKey(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetByKey.future = None
    def HasKey(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HasKey.future = None
    def FetchFromSync(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def LastOffset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    LastOffset.future = None
    def Mark(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Mark.future = None
    def GetMarkStateMessage(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetMarkStateMessage.future = None
    def EndOfLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    EndOfLog.future = None


  def beta_create_InternalService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('sandglass.InternalService', 'EndOfLog'): EndOfLogRequest.FromString,
      ('sandglass.InternalService', 'FetchFromSync'): FetchFromSyncRequest.FromString,
      ('sandglass.InternalService', 'GetByKey'): GetRequest.FromString,
      ('sandglass.InternalService', 'GetMarkStateMessage'): GetMarkRequest.FromString,
      ('sandglass.InternalService', 'HasKey'): GetRequest.FromString,
      ('sandglass.InternalService', 'LastOffset'): LastOffsetRequest.FromString,
      ('sandglass.InternalService', 'Mark'): MarkRequest.FromString,
    }
    response_serializers = {
      ('sandglass.InternalService', 'EndOfLog'): EndOfLogReply.SerializeToString,
      ('sandglass.InternalService', 'FetchFromSync'): Message.SerializeToString,
      ('sandglass.InternalService', 'GetByKey'): Message.SerializeToString,
      ('sandglass.InternalService', 'GetMarkStateMessage'): Message.SerializeToString,
      ('sandglass.InternalService', 'HasKey'): HasResponse.SerializeToString,
      ('sandglass.InternalService', 'LastOffset'): LastOffsetReply.SerializeToString,
      ('sandglass.InternalService', 'Mark'): MarkResponse.SerializeToString,
    }
    method_implementations = {
      ('sandglass.InternalService', 'EndOfLog'): face_utilities.unary_unary_inline(servicer.EndOfLog),
      ('sandglass.InternalService', 'FetchFromSync'): face_utilities.unary_stream_inline(servicer.FetchFromSync),
      ('sandglass.InternalService', 'GetByKey'): face_utilities.unary_unary_inline(servicer.GetByKey),
      ('sandglass.InternalService', 'GetMarkStateMessage'): face_utilities.unary_unary_inline(servicer.GetMarkStateMessage),
      ('sandglass.InternalService', 'HasKey'): face_utilities.unary_unary_inline(servicer.HasKey),
      ('sandglass.InternalService', 'LastOffset'): face_utilities.unary_unary_inline(servicer.LastOffset),
      ('sandglass.InternalService', 'Mark'): face_utilities.unary_unary_inline(servicer.Mark),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_InternalService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('sandglass.InternalService', 'EndOfLog'): EndOfLogRequest.SerializeToString,
      ('sandglass.InternalService', 'FetchFromSync'): FetchFromSyncRequest.SerializeToString,
      ('sandglass.InternalService', 'GetByKey'): GetRequest.SerializeToString,
      ('sandglass.InternalService', 'GetMarkStateMessage'): GetMarkRequest.SerializeToString,
      ('sandglass.InternalService', 'HasKey'): GetRequest.SerializeToString,
      ('sandglass.InternalService', 'LastOffset'): LastOffsetRequest.SerializeToString,
      ('sandglass.InternalService', 'Mark'): MarkRequest.SerializeToString,
    }
    response_deserializers = {
      ('sandglass.InternalService', 'EndOfLog'): EndOfLogReply.FromString,
      ('sandglass.InternalService', 'FetchFromSync'): Message.FromString,
      ('sandglass.InternalService', 'GetByKey'): Message.FromString,
      ('sandglass.InternalService', 'GetMarkStateMessage'): Message.FromString,
      ('sandglass.InternalService', 'HasKey'): HasResponse.FromString,
      ('sandglass.InternalService', 'LastOffset'): LastOffsetReply.FromString,
      ('sandglass.InternalService', 'Mark'): MarkResponse.FromString,
    }
    cardinalities = {
      'EndOfLog': cardinality.Cardinality.UNARY_UNARY,
      'FetchFromSync': cardinality.Cardinality.UNARY_STREAM,
      'GetByKey': cardinality.Cardinality.UNARY_UNARY,
      'GetMarkStateMessage': cardinality.Cardinality.UNARY_UNARY,
      'HasKey': cardinality.Cardinality.UNARY_UNARY,
      'LastOffset': cardinality.Cardinality.UNARY_UNARY,
      'Mark': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'sandglass.InternalService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
